<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BLACK_OX</title>
  
  <subtitle>The palest ink is better than the best memory</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blackox.cn/"/>
  <updated>2023-09-04T08:40:31.000Z</updated>
  <id>https://blackox.cn/</id>
  
  <author>
    <name>BLACK_OX</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>usbcamera android 4k支持</title>
    <link href="https://blackox.cn/2023/09/04/usbcamera-android-4k%E6%94%AF%E6%8C%81/"/>
    <id>https://blackox.cn/2023/09/04/usbcamera-android-4k支持/</id>
    <published>2023-09-04T08:40:31.000Z</published>
    <updated>2023-09-04T08:40:31.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;usbcamera&quot;&gt;&lt;a href=&quot;#usbcamera&quot; class=&quot;headerlink&quot; title=&quot;usbcamera&quot;&gt;&lt;/a&gt;usbcamera&lt;/h3&gt;&lt;p&gt;android 外接 usbcamera，已经有比较成熟的技术方案&lt;a href=&quot;https://github.com/saki4510t/UVCCamera&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;UVCCamera&lt;/a&gt;,参考这个库，配置Andoird工程，依赖库接入，把外接usbcamera 流程跑通不难。&lt;/p&gt;
&lt;p&gt;手头设备是海康威视的4K摄像头，run起立 camera画面也正常出来了。 如果都这么顺利的话，那就没这篇文章了 😂😂😂&lt;/p&gt;
&lt;h3 id=&quot;4k&quot;&gt;&lt;a href=&quot;#4k&quot; class=&quot;headerlink&quot; title=&quot;4k&quot;&gt;&lt;/a&gt;4k&lt;/h3&gt;&lt;p&gt;画面是出来了，发现分辨率最多只拉到2k（2560 x 1440），完全没有发挥出4k的能力。 比较容易想到的是 线 或者 hub 用的是usb2.0的（480Mbit/s），传输速度不够，所以出不了4K。&lt;br&gt;搞一根3.0的线 确定口子也是3.0的之后，再次跑起来，发现4k画面花了，只有顶上一点点内容，绝大部分是灰的，懵逼开始…&lt;/p&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox.cn/categories/media/"/>
    
    
      <category term="camera" scheme="https://blackox.cn/tags/camera/"/>
    
      <category term="android" scheme="https://blackox.cn/tags/android/"/>
    
      <category term="usb" scheme="https://blackox.cn/tags/usb/"/>
    
      <category term="uvc" scheme="https://blackox.cn/tags/uvc/"/>
    
  </entry>
  
  <entry>
    <title>webrtc video流程分析</title>
    <link href="https://blackox.cn/2023/03/01/webrtc-video%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/"/>
    <id>https://blackox.cn/2023/03/01/webrtc-video流程分析/</id>
    <published>2023-03-01T08:37:34.000Z</published>
    <updated>2023-03-01T08:37:34.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;video&quot;&gt;&lt;a href=&quot;#video&quot; class=&quot;headerlink&quot; title=&quot;video&quot;&gt;&lt;/a&gt;video&lt;/h3&gt;&lt;p&gt;收集candidate之后，就可以建立好数据传输的通道了，现在通过源码走读下视频数据是如何 采集 &amp;amp; 编码 &amp;amp; 传输的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/20230301_164144_361d2680-06b6-4110-9f92-fa40e8bc4341.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="RTC" scheme="https://blackox.cn/categories/RTC/"/>
    
    
      <category term="ios" scheme="https://blackox.cn/tags/ios/"/>
    
      <category term="webrtc" scheme="https://blackox.cn/tags/webrtc/"/>
    
  </entry>
  
  <entry>
    <title>webrtc-candidate源码分析</title>
    <link href="https://blackox.cn/2023/02/23/webrtc-candidate%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>https://blackox.cn/2023/02/23/webrtc-candidate源码分析/</id>
    <published>2023-02-23T03:20:53.000Z</published>
    <updated>2023-02-23T03:20:53.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;webrtc-信令&quot;&gt;&lt;a href=&quot;#webrtc-信令&quot; class=&quot;headerlink&quot; title=&quot;webrtc 信令&quot;&gt;&lt;/a&gt;webrtc 信令&lt;/h3&gt;&lt;p&gt;来自ChatGPT&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;WebRTC（Web Real-Time Communication）是一种可以在浏览器之间实现实时音视频通信的技术。信令是 WebRTC 中的一部分，用于管理会话的建立、维护和结束。简单来说，信令是用于交换元数据以建立连接的过程。&lt;/p&gt;
&lt;p&gt;在 WebRTC 中，需要进行一些信令交换步骤来建立连接，例如：&lt;/p&gt;
&lt;p&gt;交换SDP（Session Description Protocol）：每个端点都需要将其本地的SDP发送给对方，并且解析对方发来的SDP。&lt;br&gt;交换ICE（Interactive Connectivity Establishment）候选项：WebRTC 会在两个端点之间建立多个连接，并尝试找到最佳的连接。ICE候选项是一组网络地址和端口，用于在对等方之间建立连接。&lt;br&gt;交换网络信息：包括网络类型、带宽和网络状况等信息，以帮助双方选择最佳的连接。&lt;br&gt;以上这些步骤需要通过信令服务器来完成。信令服务器负责协调连接双方之间的通信，并确保会话能够顺利进行。&lt;/p&gt;
&lt;p&gt;WebRTC 并没有规定信令协议，因此开发人员可以自行选择适合自己应用的协议，例如 SIP（Session Initiation Protocol）、XMPP（Extensible Messaging and Presence Protocol）或 WebSocket 等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文看下是如何获取ICE候选项 &lt;code&gt;ice candidate&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="RTC" scheme="https://blackox.cn/categories/RTC/"/>
    
    
      <category term="ios" scheme="https://blackox.cn/tags/ios/"/>
    
      <category term="webrtc" scheme="https://blackox.cn/tags/webrtc/"/>
    
  </entry>
  
  <entry>
    <title>OWT-client-ios信令交互源码分析</title>
    <link href="https://blackox.cn/2023/02/15/OWT-client-ios%E4%BF%A1%E4%BB%A4%E4%BA%A4%E4%BA%92%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>https://blackox.cn/2023/02/15/OWT-client-ios信令交互源码分析/</id>
    <published>2023-02-15T07:55:21.000Z</published>
    <updated>2023-02-15T07:55:21.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;OWT&quot;&gt;&lt;a href=&quot;#OWT&quot; class=&quot;headerlink&quot; title=&quot;OWT&quot;&gt;&lt;/a&gt;OWT&lt;/h3&gt;&lt;p&gt;OWT 信令交互过程:&lt;/p&gt;
&lt;p&gt;A POST /tokens/&lt;br&gt;A SocketIO connect&lt;br&gt;A SocketIO login&lt;br&gt;A SocketIO publish&lt;br&gt;A SocketIO soac offer&lt;br&gt;A SocketIO soac candidate&lt;br&gt;Portal SocketIO soac answer&lt;/p&gt;
&lt;p&gt;B POST /tokens/&lt;br&gt;B SocketIO connect&lt;br&gt;B SocketIO login&lt;br&gt;B SocketIO subscribe&lt;br&gt;B SocketIO soac offer&lt;br&gt;B SocketIO soac candidate&lt;br&gt;Portal SocketIO soac answer&lt;/p&gt;
&lt;p&gt;SocketIO logout&lt;/p&gt;
    
    </summary>
    
      <category term="RTC" scheme="https://blackox.cn/categories/RTC/"/>
    
    
      <category term="ios" scheme="https://blackox.cn/tags/ios/"/>
    
      <category term="webrtc" scheme="https://blackox.cn/tags/webrtc/"/>
    
      <category term="OWT" scheme="https://blackox.cn/tags/OWT/"/>
    
  </entry>
  
  <entry>
    <title>ffmpeg源码之xx学习笔记</title>
    <link href="https://blackox.cn/2023/01/16/ffmpeg%E6%BA%90%E7%A0%81%E4%B9%8Bxx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://blackox.cn/2023/01/16/ffmpeg源码之xx学习笔记/</id>
    <published>2023-01-16T06:48:28.000Z</published>
    <updated>2023-01-28T06:48:28.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;AVClass&quot;&gt;&lt;a href=&quot;#AVClass&quot; class=&quot;headerlink&quot; title=&quot;AVClass&quot;&gt;&lt;/a&gt;AVClass&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AVFormatContext *s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s-&amp;gt;av_class = &amp;amp;av_format_context_class;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; AVClass av_format_context_class = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .class_name     = &lt;span class=&quot;string&quot;&gt;&quot;AVFormatContext&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .item_name      = format_to_name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .option         = avformat_options,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .version        = LIBAVUTIL_VERSION_INT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .child_next     = format_child_next,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .child_class_iterate = format_child_class_iterate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .category       = AV_CLASS_CATEGORY_MUXER,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .get_category   = get_category,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="ffmepg" scheme="https://blackox.cn/categories/ffmepg/"/>
    
    
      <category term="ffmepg" scheme="https://blackox.cn/tags/ffmepg/"/>
    
  </entry>
  
  <entry>
    <title>ffmepg源码之http学习笔记</title>
    <link href="https://blackox.cn/2022/12/22/ffmepg%E6%BA%90%E7%A0%81%E4%B9%8Bhttp%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://blackox.cn/2022/12/22/ffmepg源码之http学习笔记/</id>
    <published>2022-12-22T07:45:37.000Z</published>
    <updated>2023-01-12T04:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;respect&quot;&gt;&lt;a href=&quot;#respect&quot; class=&quot;headerlink&quot; title=&quot;respect&quot;&gt;&lt;/a&gt;respect&lt;/h3&gt;&lt;p&gt;致敬雷神&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/20130914204051125.jpeg&quot; alt=&quot;致敬雷神&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;start&quot;&gt;&lt;a href=&quot;#start&quot; class=&quot;headerlink&quot; title=&quot;start&quot;&gt;&lt;/a&gt;start&lt;/h3&gt;&lt;p&gt;从 AVFormatContext （解封装结构体） 入口开始吧 …&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;libavformat/options.c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;AVFormatContext *&lt;span class=&quot;title&quot;&gt;avformat_alloc_context&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FFFormatContext *&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; si = av_mallocz(&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(*si));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AVFormatContext *s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!si)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s = &amp;amp;si-&amp;gt;pub;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s-&amp;gt;av_class = &amp;amp;av_format_context_class;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/// io入口 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s-&amp;gt;io_open  = io_open_default;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s-&amp;gt;io_close = ff_format_io_close_default;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s-&amp;gt;io_close2= io_close2_default;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    av_opt_set_defaults(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    si-&amp;gt;pkt = av_packet_alloc();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    si-&amp;gt;parse_pkt = av_packet_alloc();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!si-&amp;gt;pkt || !si-&amp;gt;parse_pkt) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        avformat_free_context(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    si-&amp;gt;shortest_end = AV_NOPTS_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="ffmepg" scheme="https://blackox.cn/categories/ffmepg/"/>
    
    
      <category term="ffmepg" scheme="https://blackox.cn/tags/ffmepg/"/>
    
  </entry>
  
  <entry>
    <title>ios获取udid</title>
    <link href="https://blackox.cn/2022/11/04/ios%E8%8E%B7%E5%8F%96udid/"/>
    <id>https://blackox.cn/2022/11/04/ios获取udid/</id>
    <published>2022-11-04T10:15:27.000Z</published>
    <updated>2022-11-07T11:15:04.526Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;苹果企业账号打包分发app，方便内部安装测试App。最近公司企业账号续费失败，申请新的企业账号没成功。（国内近2年基本没有企业申请成功）&lt;br&gt;这就蛋疼了，了解到其他app是通过多开发者账号，&lt;strong&gt;adhoc&lt;/strong&gt;证书白名单的方式来做分发，&lt;strong&gt;adhoc&lt;/strong&gt;证书无法解决设备数量的问题，最多100台设备，而且还要提前注册好，一年更新一次，注册设备就是要拿到设备的udid。&lt;/p&gt;
&lt;h3 id=&quot;获取udid&quot;&gt;&lt;a href=&quot;#获取udid&quot; class=&quot;headerlink&quot; title=&quot;获取udid&quot;&gt;&lt;/a&gt;获取udid&lt;/h3&gt;&lt;p&gt;了解到苹果可以通过&lt;strong&gt;safari&lt;/strong&gt;以OTA(over the air)的方式拿到udid。&lt;/p&gt;
&lt;p&gt;整体流程分三步&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下发&lt;strong&gt;udid.mobileconfig&lt;/strong&gt;文件&lt;/li&gt;
&lt;li&gt;授权安装配置文件&lt;/li&gt;
&lt;li&gt;回调解析xml拿到udid&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- ![](/images/20221107_182553_IMG_1075.jpg)

![](/images/20221107_182553_IMG_1074.jpg) --&gt;
&lt;center class=&quot;half&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/20221107_182553_IMG_1075.jpg&quot; width=&quot;300&quot;&gt;  &lt;img src=&quot;/images/20221107_182553_IMG_1074.jpg&quot; width=&quot;300&quot;&gt;&lt;br&gt;&lt;/center&gt;
    
    </summary>
    
      <category term="ios" scheme="https://blackox.cn/categories/ios/"/>
    
    
      <category term="ios" scheme="https://blackox.cn/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>MP4笔记</title>
    <link href="https://blackox.cn/2022/10/28/MP4%E7%AC%94%E8%AE%B0/"/>
    <id>https://blackox.cn/2022/10/28/MP4笔记/</id>
    <published>2022-10-28T08:34:53.000Z</published>
    <updated>2022-11-01T01:50:45.103Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;MP4&quot;&gt;&lt;a href=&quot;#MP4&quot; class=&quot;headerlink&quot; title=&quot;MP4&quot;&gt;&lt;/a&gt;MP4&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/20221031_170011_4zm0n1tcq2.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox.cn/categories/media/"/>
    
    
      <category term="media" scheme="https://blackox.cn/tags/media/"/>
    
  </entry>
  
  <entry>
    <title>H264笔记</title>
    <link href="https://blackox.cn/2022/10/26/H264%E7%AC%94%E8%AE%B0/"/>
    <id>https://blackox.cn/2022/10/26/H264笔记/</id>
    <published>2022-10-26T07:28:12.000Z</published>
    <updated>2023-01-28T09:50:06.665Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;H264&quot;&gt;&lt;a href=&quot;#H264&quot; class=&quot;headerlink&quot; title=&quot;H264&quot;&gt;&lt;/a&gt;H264&lt;/h3&gt;&lt;p&gt;H264是视频编码规范，在这个规范下H264码流有两种方式：&lt;strong&gt;AnnexB&lt;/strong&gt;格式 &amp;amp;&amp;amp; &lt;strong&gt;AVCC&lt;/strong&gt;格式&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AnnexB&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;AnnexB 的原理是在每个 NALU 前面写上一个特殊的起始码，通过这个起始码来当做 NALU 的分隔符，从而分割每个 NALU&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;[start code] NALU&lt;/th&gt;
&lt;th&gt;[start code] NALU&lt;/th&gt;
&lt;th&gt;[start code] NALU&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;AVCC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;avcC 则采用了另外一种方式。那就是在 NALU 前面写上几个字节，这几个字节组成一个整数（大端字节序）这个整数表示了整个 NALU 的长度&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;[extra data]&lt;/th&gt;
&lt;th&gt;[length] NALU&lt;/th&gt;
&lt;th&gt;[length] NALU&lt;/th&gt;
&lt;th&gt;[length] NALU&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox.cn/categories/media/"/>
    
    
      <category term="media" scheme="https://blackox.cn/tags/media/"/>
    
  </entry>
  
  <entry>
    <title>形状特效</title>
    <link href="https://blackox.cn/2022/10/14/%E5%BD%A2%E7%8A%B6%E7%89%B9%E6%95%88/"/>
    <id>https://blackox.cn/2022/10/14/形状特效/</id>
    <published>2022-10-14T09:56:35.000Z</published>
    <updated>2022-10-20T09:26:21.365Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;形状特效&quot;&gt;&lt;a href=&quot;#形状特效&quot; class=&quot;headerlink&quot; title=&quot;形状特效&quot;&gt;&lt;/a&gt;形状特效&lt;/h3&gt;&lt;p&gt;初次接触到形状特效是在剪映，剪映中叫蒙版，就是列举了一些常见形状的蒙层效果，除了常规的旋转、缩放、位移等操作外，还有个虚化的效果。可以去剪映感受下。&lt;/p&gt;
&lt;p&gt;接触到这东西，觉得效果挺不错，打算研究下，正好手头的编辑工具项目也可以用上。线性、圆形、矩形，这几个规范的，通过平方根公式 跟 三角形余弦定理基本都可以推算出来(可以参考github &lt;a href=&quot;https://github.com/blackox626/shader/blob/master/rect.glsl&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;shader&lt;/a&gt;)，重点来了，爱心 &amp;amp; 五角星 怎么搞？&lt;/p&gt;
&lt;center class=&quot;half&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://si.geilicdn.com/materialap-01040000018069dab5c00a20e2c5_450_450.jpg&quot; width=&quot;300&quot;&gt;  &lt;img src=&quot;https://si.geilicdn.com/materialap-7fa10000018069dad0420a22e1f2_450_450.jpg&quot; width=&quot;300&quot;&gt;&lt;br&gt;&lt;/center&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox.cn/categories/media/"/>
    
    
      <category term="media" scheme="https://blackox.cn/tags/media/"/>
    
  </entry>
  
  <entry>
    <title>动态滤镜</title>
    <link href="https://blackox.cn/2022/10/14/%E5%8A%A8%E6%80%81%E6%BB%A4%E9%95%9C/"/>
    <id>https://blackox.cn/2022/10/14/动态滤镜/</id>
    <published>2022-10-14T09:48:04.000Z</published>
    <updated>2022-10-17T03:00:40.193Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;滤镜&quot;&gt;&lt;a href=&quot;#滤镜&quot; class=&quot;headerlink&quot; title=&quot;滤镜&quot;&gt;&lt;/a&gt;滤镜&lt;/h3&gt;&lt;p&gt;音视频编辑工具中，对图像或者视频加滤镜是一种常见的做法，普通滤镜很好理解，一张LUT图就搞定了，LUT图一般设计师会提供好，开发拿过来转成纹理，opengl做下颜色转换就好了，这里就不多说了。&lt;/p&gt;
&lt;p&gt;但是今天想讲的是动态滤镜，也有叫特效的，动效等等。比如小红书/剪映 等等,感受一下就大概知道了。&lt;/p&gt;
&lt;h3 id=&quot;动态滤镜&quot;&gt;&lt;a href=&quot;#动态滤镜&quot; class=&quot;headerlink&quot; title=&quot;动态滤镜&quot;&gt;&lt;/a&gt;动态滤镜&lt;/h3&gt;&lt;p&gt;先上一个效果感受下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://v.geilicdn.com/gif/followw813654-1c8600000183dc548a7d0a21146b_1066_1280.mp4_480_576.gif&quot; alt=&quot;动态滤镜&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox.cn/categories/media/"/>
    
    
      <category term="media" scheme="https://blackox.cn/tags/media/"/>
    
  </entry>
  
  <entry>
    <title>图像描边</title>
    <link href="https://blackox.cn/2022/09/10/%E5%9B%BE%E5%83%8F%E6%8F%8F%E8%BE%B9/"/>
    <id>https://blackox.cn/2022/09/10/图像描边/</id>
    <published>2022-09-10T13:53:42.000Z</published>
    <updated>2022-09-13T02:35:07.815Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;image-border&quot;&gt;&lt;a href=&quot;#image-border&quot; class=&quot;headerlink&quot; title=&quot;image border&quot;&gt;&lt;/a&gt;image border&lt;/h3&gt;&lt;p&gt;最近项目中搞了个图像描边的需求，常见的美图工具App都有类似的功能，典型的如美图秀秀，一开始觉得应该不太复杂，正常评估时间，实际做的时候，发现问题比想象中的复杂多了，结果项目不得不延期 😭，所以有必要搞篇文章来总结下教训。&lt;/p&gt;
&lt;p&gt;先说整体的流程： 1、原图 -&amp;gt; 2、抠图 -&amp;gt; 3、边缘检测 -&amp;gt; 4、绘制边缘 -&amp;gt; 5、结果导出&lt;/p&gt;
&lt;p&gt;这个流程还是很容易想到，但是除了最后一步相对来说容易点，2、3、4都是一路坑 😞&lt;/p&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox.cn/categories/media/"/>
    
    
      <category term="media" scheme="https://blackox.cn/tags/media/"/>
    
  </entry>
  
  <entry>
    <title>camera orientation</title>
    <link href="https://blackox.cn/2022/09/09/camera-orientation/"/>
    <id>https://blackox.cn/2022/09/09/camera-orientation/</id>
    <published>2022-09-09T10:18:51.000Z</published>
    <updated>2022-09-09T11:22:06.871Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;camera&quot;&gt;&lt;a href=&quot;#camera&quot; class=&quot;headerlink&quot; title=&quot;camera&quot;&gt;&lt;/a&gt;camera&lt;/h3&gt;&lt;p&gt;手机相机录视频或者拍照，需要考虑设备的方向，主要在两方面&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;采集过程中，无论手机什么方向采集，采集画面都是正着看，不用侧头&lt;/li&gt;
&lt;li&gt;录制/或者拍照后，视频/图片在正常手持设备的情况下正常显示，不用横着手机&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;正常手持一般都是竖着拿手机，所以就算横着拍摄，竖着拿手机也需要正常显示，不理解可以参考下系统相机。&lt;/p&gt;
&lt;p&gt;所以这里就存在一个方向修正的问题。&lt;/p&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox.cn/categories/media/"/>
    
    
      <category term="camera" scheme="https://blackox.cn/tags/camera/"/>
    
  </entry>
  
  <entry>
    <title>__has_include</title>
    <link href="https://blackox.cn/2022/09/06/has-include/"/>
    <id>https://blackox.cn/2022/09/06/has-include/</id>
    <published>2022-09-06T05:47:47.000Z</published>
    <updated>2022-09-06T06:36:58.265Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;VS&quot;&gt;&lt;a href=&quot;#VS&quot; class=&quot;headerlink&quot; title=&quot;VS&quot;&gt;&lt;/a&gt;VS&lt;/h3&gt;&lt;p&gt;在搞音视频的过程中，早期为了快速实现功能，会用到一些开源库，比如&lt;code&gt;FFMpeg、OpenCV、LibYUV&lt;/code&gt; 等，这些大名鼎鼎的开源库能够解决音视频领域的很多问题，编解码、边缘检测、RGB-YUV格式转换等等。&lt;/p&gt;
&lt;p&gt;这几个开源库还都是C/C++的，完美解决跨平台的问题，所以早期可以快速上线，但也会带来增加包大小的问题，这是最明显的，另外开源方案也并非没有BUG。对开源库做裁剪减少大小/提issue等待官方处理、自己处理BUG等这些成本相对也不小。&lt;/p&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox.cn/categories/media/"/>
    
    
      <category term="media" scheme="https://blackox.cn/tags/media/"/>
    
  </entry>
  
  <entry>
    <title>RGB2YUV</title>
    <link href="https://blackox.cn/2022/09/05/RGB2YUV/"/>
    <id>https://blackox.cn/2022/09/05/RGB2YUV/</id>
    <published>2022-09-05T11:21:17.000Z</published>
    <updated>2022-10-25T11:21:17.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;RGB2YUV&quot;&gt;&lt;a href=&quot;#RGB2YUV&quot; class=&quot;headerlink&quot; title=&quot;RGB2YUV&quot;&gt;&lt;/a&gt;RGB2YUV&lt;/h3&gt;&lt;p&gt;处理音视频，对&lt;strong&gt;YUV RGB&lt;/strong&gt;肯定不陌生，这里记录下经过OpenGL处理后的 &lt;strong&gt;RGB&lt;/strong&gt; 格式的&lt;strong&gt;pixelBuffer&lt;/strong&gt; 转成 &lt;strong&gt;YUV&lt;/strong&gt; 格式导出视频。&lt;/p&gt;
&lt;h4 id=&quot;DIY&quot;&gt;&lt;a href=&quot;#DIY&quot; class=&quot;headerlink&quot; title=&quot;DIY&quot;&gt;&lt;/a&gt;DIY&lt;/h4&gt;&lt;p&gt;自己处理矩阵的计算，YUV的存储格式，可以加深对YUV的理解， 类似的反过来处理，或者处理其他格式的YUV 422 444等，也是一样的。&lt;br&gt;所以还是有必要了解一下，DO IT YOURSELF.&lt;/p&gt;
&lt;p&gt;重点是注意内存对齐，YUV420采样存储方式就好了，其他没什么复杂的。&lt;/p&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox.cn/categories/media/"/>
    
    
      <category term="media" scheme="https://blackox.cn/tags/media/"/>
    
      <category term="YUV" scheme="https://blackox.cn/tags/YUV/"/>
    
  </entry>
  
  <entry>
    <title>flutter Display P3</title>
    <link href="https://blackox.cn/2022/08/31/flutter-Display-P3/"/>
    <id>https://blackox.cn/2022/08/31/flutter-Display-P3/</id>
    <published>2022-08-31T11:00:17.000Z</published>
    <updated>2022-09-13T02:35:07.815Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Display-P3&quot;&gt;&lt;a href=&quot;#Display-P3&quot; class=&quot;headerlink&quot; title=&quot;Display P3&quot;&gt;&lt;/a&gt;Display P3&lt;/h3&gt;&lt;p&gt;Display P3 是苹果手机相机使用的一种色域，查看图片信息可以看到， 然而在flutter中 渲染 Display P3格式的图片 bitmap颜色失真,不了解色域的参考下前面HDR相关的文章&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/20220831_190154_image.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="flutter" scheme="https://blackox.cn/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://blackox.cn/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>flutter-hdr</title>
    <link href="https://blackox.cn/2022/08/24/flutter-hdr/"/>
    <id>https://blackox.cn/2022/08/24/flutter-hdr/</id>
    <published>2022-08-24T10:54:50.000Z</published>
    <updated>2022-10-25T09:59:12.668Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;flutter&quot;&gt;&lt;a href=&quot;#flutter&quot; class=&quot;headerlink&quot; title=&quot;flutter&quot;&gt;&lt;/a&gt;flutter&lt;/h3&gt;&lt;p&gt;flutter 播放 HDR 视频，色彩跟亮度都有问题 ，github 也有反馈这个issue &lt;a href=&quot;https://github.com/flutter/flutter/issues/91241&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Video Player HDR Problem&lt;/strong&gt;&lt;/a&gt; 跟原生的对比可以很明显看到差距，官方看起来好像也不重视这个问题 😕&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2773578/135998217-329a735c-5db4-462b-966f-441d2ec154ce.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="flutter" scheme="https://blackox.cn/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://blackox.cn/tags/flutter/"/>
    
      <category term="HDR" scheme="https://blackox.cn/tags/HDR/"/>
    
  </entry>
  
  <entry>
    <title>HDR笔记</title>
    <link href="https://blackox.cn/2022/08/18/HDR%E7%AC%94%E8%AE%B0/"/>
    <id>https://blackox.cn/2022/08/18/HDR笔记/</id>
    <published>2022-08-18T09:43:46.000Z</published>
    <updated>2022-09-13T02:35:07.814Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Noun-explanation&quot;&gt;&lt;a href=&quot;#Noun-explanation&quot; class=&quot;headerlink&quot; title=&quot;Noun explanation&quot;&gt;&lt;/a&gt;Noun explanation&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;ITU&lt;/strong&gt;：国际电信联盟 &lt;strong&gt;&lt;code&gt;International Telecommunication Union&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;ITU-R&lt;/strong&gt;：国际电信联盟无线电通信部门 &lt;strong&gt;ITU Radiocommunication Sector&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CIE&lt;/strong&gt; :国际照明协会 （&lt;a href=&quot;https://zh.m.wikipedia.org/wiki/%E8%8B%B1%E6%96%87&quot; title=&quot;英文&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;英文&lt;/a&gt;：&lt;strong&gt;&lt;code&gt;International Commission on Illumination&lt;/code&gt;&lt;/strong&gt; ，&lt;a href=&quot;https://zh.m.wikipedia.org/wiki/%E6%B3%95%E6%96%87&quot; title=&quot;法文&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;法文&lt;/a&gt;：&lt;strong&gt;&lt;code&gt;Commission internationale de l&amp;#39;éclairage&lt;/code&gt;&lt;/strong&gt; ，采用法文&lt;a href=&quot;https://zh.m.wikipedia.org/wiki/%E7%B8%AE%E5%AF%AB&quot; title=&quot;缩写&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;缩写&lt;/a&gt;：&lt;strong&gt;CIE&lt;/strong&gt; ）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SMPTE&lt;/strong&gt;：电影电视工程师协会 &lt;strong&gt;Society of Motion Picture and Television Engineers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hue&lt;/strong&gt;：色调 色彩 色相&lt;br&gt;&lt;strong&gt;Chroma&lt;/strong&gt;：色调饱和度 浓度&lt;br&gt;&lt;strong&gt;Luminance&lt;/strong&gt;：亮度 明度&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;HDR-Concept&quot;&gt;&lt;a href=&quot;#HDR-Concept&quot; class=&quot;headerlink&quot; title=&quot;HDR Concept&quot;&gt;&lt;/a&gt;HDR Concept&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;HDR&lt;/strong&gt;:&lt;code&gt;High Dynamic Range&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;字面上是动态范围，一般指亮度上可以表达更大的亮度范围，呈现更大的亮度对比度。但是实际实际上HDR的技术和标准涉及色彩相关的一组属性的改善，可以带来更多的颜色、更大的亮度对比度、更高精度的量化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;OETF/EOTF&lt;/strong&gt;: Optical-Electro/Electro-Optical Transfer Function 光电/电光转换函数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;人对亮度的感知是非线性的，对暗部细节敏感，对亮部细节不敏感，利用这个特点设计了非线性的光电转换和电光转换的函数。这样的处理不仅可以节省带宽，也可以基本满足用户体验需求。&lt;br&gt;光电转换的时候做了特殊的非线性编码，为暗部细节分配更多的码率，亮部细节进行了压缩或者截断减少码率的分配。电光转换进行显示还原的时候，通过应用一个逆的非线性变化，还原出线性光。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="HDR" scheme="https://blackox.cn/categories/HDR/"/>
    
    
      <category term="HDR" scheme="https://blackox.cn/tags/HDR/"/>
    
      <category term="YUV" scheme="https://blackox.cn/tags/YUV/"/>
    
      <category term="OPENGL" scheme="https://blackox.cn/tags/OPENGL/"/>
    
  </entry>
  
  <entry>
    <title>coreimage with metal 笔记</title>
    <link href="https://blackox.cn/2022/08/08/coreimage-with-metal-%E7%AC%94%E8%AE%B0/"/>
    <id>https://blackox.cn/2022/08/08/coreimage-with-metal-笔记/</id>
    <published>2022-08-08T08:07:28.000Z</published>
    <updated>2022-09-13T02:35:07.814Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;xcode&quot;&gt;&lt;a href=&quot;#xcode&quot; class=&quot;headerlink&quot; title=&quot;xcode&quot;&gt;&lt;/a&gt;xcode&lt;/h3&gt;&lt;p&gt;近期有自定义CoreImage的CIFilter的需求，前期通过CIKL 定义 CIKernel完成了任务，后面了解到CoreImage新特性支持metal的方式直接自定义 CIKernel，提高效率。&lt;/p&gt;
&lt;p&gt;CIKL的方式，存在两个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编写 kernel 的时候，没有报错提示，哪怕是参数名错误都无法检查处理。效率极低。&lt;/li&gt;
&lt;li&gt;翻译转换，编译，都是发生到运行时，导致第一次使用滤镜的时候，耗时较久。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Metal: 在build阶段 就可以编译 链接 .metal文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/8322102d-d9c7-4066-b1f5-c0b26a36d186.png&quot; alt=&quot;Compiling &amp;amp; Linking&quot;&gt;&lt;/p&gt;
&lt;p&gt;参考苹果的官方文档 &lt;code&gt;Metal Shading Language for CoreImage Kernels&lt;/code&gt;  ,在&lt;code&gt;xcode integration&lt;/code&gt; 部分提到在&lt;code&gt;build setting&lt;/code&gt; 设置 &lt;code&gt;Other Metal Compiler Flags&lt;/code&gt;, 文档已经很老了（2018年的），新版的xcode已经没有这个选项了，如果不做处理，会有报错 &lt;code&gt;&amp;quot;/air-lld:1:1: symbol(s) not found for target &amp;#39;air64-apple-ios12.0.0&amp;#39;&amp;quot; and &amp;quot;air-lld command failed with exit code 1 (use -v to see invocation)&amp;quot;&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="metal" scheme="https://blackox.cn/categories/metal/"/>
    
    
      <category term="metal" scheme="https://blackox.cn/tags/metal/"/>
    
      <category term="coreimage" scheme="https://blackox.cn/tags/coreimage/"/>
    
  </entry>
  
  <entry>
    <title>flutter 1.17共享engine</title>
    <link href="https://blackox.cn/2020/06/03/flutter-1-17%E5%85%B1%E4%BA%ABengine/"/>
    <id>https://blackox.cn/2020/06/03/flutter-1-17共享engine/</id>
    <published>2020-06-02T16:02:04.000Z</published>
    <updated>2022-08-23T12:34:54.500Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;flutter 升级到 1.17之后，app ios 线上遇到一个crash ,通过官方的 符号表文件 flutter.dsym 还原出堆栈如下&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; auto fml::internal::CopyableLambda&amp;lt;flutter::Shell::OnPlatformViewCreated(std::__1::unique_ptr&amp;lt;flutter::Surface, std::__1::default_delete&amp;lt;flutter::Surface&amp;gt; &amp;gt;)::$_8&amp;gt;::operator()&amp;lt;&amp;gt;() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; (in Flutter) (make_copyable.h:&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; auto fml::internal::CopyableLambda&amp;lt;flutter::Shell::OnPlatformViewCreated(std::__1::unique_ptr&amp;lt;flutter::Surface, std::__1::default_delete&amp;lt;flutter::Surface&amp;gt; &amp;gt;)::$_8&amp;gt;::operator()&amp;lt;&amp;gt;() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; (in Flutter) (make_copyable.h:&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; fml::MessageLoopImpl::FlushTasks(fml::FlushType) (in Flutter) (message_loop_impl.cc:&lt;span class=&quot;number&quot;&gt;129&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; fml::MessageLoopDarwin::OnTimerFire(__CFRunLoopTimer*, fml::MessageLoopDarwin*) (in Flutter) (message_loop_darwin.mm:&lt;span class=&quot;number&quot;&gt;76&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; fml::MessageLoopDarwin::Run() (in Flutter) (message_loop_darwin.mm:&lt;span class=&quot;number&quot;&gt;47&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;* std::__1::__thread_proxy&amp;lt;std::__1::tuple&amp;lt;std::__1::unique_ptr&amp;lt;std::__1::__thread_struct, std::__1::default_delete&amp;lt;std::__1::__thread_struct&amp;gt; &amp;gt;, fml::Thread::Thread(std::__1::basic_string&amp;lt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;, std::__1::char_traits&amp;lt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;&amp;gt;, std::__1::allocator&amp;lt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;&amp;gt; &amp;gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&amp;amp;)::$_0&amp;gt; &amp;gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*) (in Flutter) (thread:&lt;span class=&quot;number&quot;&gt;352&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里还只能看到crash在engine的c++代码中，具体原因未知&lt;/p&gt;
    
    </summary>
    
      <category term="flutter" scheme="https://blackox.cn/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://blackox.cn/tags/flutter/"/>
    
      <category term="dart" scheme="https://blackox.cn/tags/dart/"/>
    
  </entry>
  
</feed>
