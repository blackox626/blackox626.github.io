<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BLACK_OX</title>
  
  <subtitle>A bad pen is better than a good memory</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blackox626.github.io/"/>
  <updated>2022-10-20T09:26:21.365Z</updated>
  <id>https://blackox626.github.io/</id>
  
  <author>
    <name>BLACK_OX</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>形状特效</title>
    <link href="https://blackox626.github.io/2022/10/14/%E5%BD%A2%E7%8A%B6%E7%89%B9%E6%95%88/"/>
    <id>https://blackox626.github.io/2022/10/14/形状特效/</id>
    <published>2022-10-14T09:56:35.000Z</published>
    <updated>2022-10-20T09:26:21.365Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;形状特效&quot;&gt;&lt;a href=&quot;#形状特效&quot; class=&quot;headerlink&quot; title=&quot;形状特效&quot;&gt;&lt;/a&gt;形状特效&lt;/h3&gt;&lt;p&gt;初次接触到形状特效是在剪映，剪映中叫蒙版，就是列举了一些常见形状的蒙层效果，除了常规的旋转、缩放、位移等操作外，还有个虚化的效果。可以去剪映感受下。&lt;/p&gt;
&lt;p&gt;接触到这东西，觉得效果挺不错，打算研究下，正好手头的编辑工具项目也可以用上。线性、圆形、矩形，这几个规范的，通过平方根公式 跟 三角形余弦定理基本都可以推算出来(可以参考github &lt;a href=&quot;https://github.com/blackox626/shader/blob/master/rect.glsl&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;shader&lt;/a&gt;)，重点来了，爱心 &amp;amp; 五角星 怎么搞？&lt;/p&gt;
&lt;center class=&quot;half&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://si.geilicdn.com/materialap-01040000018069dab5c00a20e2c5_450_450.jpg&quot; width=&quot;300&quot;&gt;  &lt;img src=&quot;https://si.geilicdn.com/materialap-7fa10000018069dad0420a22e1f2_450_450.jpg&quot; width=&quot;300&quot;&gt;&lt;br&gt;&lt;/center&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox626.github.io/categories/media/"/>
    
    
      <category term="media" scheme="https://blackox626.github.io/tags/media/"/>
    
  </entry>
  
  <entry>
    <title>动态滤镜</title>
    <link href="https://blackox626.github.io/2022/10/14/%E5%8A%A8%E6%80%81%E6%BB%A4%E9%95%9C/"/>
    <id>https://blackox626.github.io/2022/10/14/动态滤镜/</id>
    <published>2022-10-14T09:48:04.000Z</published>
    <updated>2022-10-17T03:00:40.193Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;滤镜&quot;&gt;&lt;a href=&quot;#滤镜&quot; class=&quot;headerlink&quot; title=&quot;滤镜&quot;&gt;&lt;/a&gt;滤镜&lt;/h3&gt;&lt;p&gt;音视频编辑工具中，对图像或者视频加滤镜是一种常见的做法，普通滤镜很好理解，一张LUT图就搞定了，LUT图一般设计师会提供好，开发拿过来转成纹理，opengl做下颜色转换就好了，这里就不多说了。&lt;/p&gt;
&lt;p&gt;但是今天想讲的是动态滤镜，也有叫特效的，动效等等。比如小红书/剪映 等等,感受一下就大概知道了。&lt;/p&gt;
&lt;h3 id=&quot;动态滤镜&quot;&gt;&lt;a href=&quot;#动态滤镜&quot; class=&quot;headerlink&quot; title=&quot;动态滤镜&quot;&gt;&lt;/a&gt;动态滤镜&lt;/h3&gt;&lt;p&gt;先上一个效果感受下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://v.geilicdn.com/gif/followw813654-1c8600000183dc548a7d0a21146b_1066_1280.mp4_480_576.gif&quot; alt=&quot;动态滤镜&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox626.github.io/categories/media/"/>
    
    
      <category term="media" scheme="https://blackox626.github.io/tags/media/"/>
    
  </entry>
  
  <entry>
    <title>图像描边</title>
    <link href="https://blackox626.github.io/2022/09/10/%E5%9B%BE%E5%83%8F%E6%8F%8F%E8%BE%B9/"/>
    <id>https://blackox626.github.io/2022/09/10/图像描边/</id>
    <published>2022-09-10T13:53:42.000Z</published>
    <updated>2022-09-13T02:35:07.815Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;image-border&quot;&gt;&lt;a href=&quot;#image-border&quot; class=&quot;headerlink&quot; title=&quot;image border&quot;&gt;&lt;/a&gt;image border&lt;/h3&gt;&lt;p&gt;最近项目中搞了个图像描边的需求，常见的美图工具App都有类似的功能，典型的如美图秀秀，一开始觉得应该不太复杂，正常评估时间，实际做的时候，发现问题比想象中的复杂多了，结果项目不得不延期 😭，所以有必要搞篇文章来总结下教训。&lt;/p&gt;
&lt;p&gt;先说整体的流程： 1、原图 -&amp;gt; 2、抠图 -&amp;gt; 3、边缘检测 -&amp;gt; 4、绘制边缘 -&amp;gt; 5、结果导出&lt;/p&gt;
&lt;p&gt;这个流程还是很容易想到，但是除了最后一步相对来说容易点，2、3、4都是一路坑 😞&lt;/p&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox626.github.io/categories/media/"/>
    
    
      <category term="media" scheme="https://blackox626.github.io/tags/media/"/>
    
  </entry>
  
  <entry>
    <title>camera orientation</title>
    <link href="https://blackox626.github.io/2022/09/09/camera-orientation/"/>
    <id>https://blackox626.github.io/2022/09/09/camera-orientation/</id>
    <published>2022-09-09T10:18:51.000Z</published>
    <updated>2022-09-09T11:22:06.871Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;camera&quot;&gt;&lt;a href=&quot;#camera&quot; class=&quot;headerlink&quot; title=&quot;camera&quot;&gt;&lt;/a&gt;camera&lt;/h3&gt;&lt;p&gt;手机相机录视频或者拍照，需要考虑设备的方向，主要在两方面&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;采集过程中，无论手机什么方向采集，采集画面都是正着看，不用侧头&lt;/li&gt;
&lt;li&gt;录制/或者拍照后，视频/图片在正常手持设备的情况下正常显示，不用横着手机&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;正常手持一般都是竖着拿手机，所以就算横着拍摄，竖着拿手机也需要正常显示，不理解可以参考下系统相机。&lt;/p&gt;
&lt;p&gt;所以这里就存在一个方向修正的问题。&lt;/p&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox626.github.io/categories/media/"/>
    
    
      <category term="camera" scheme="https://blackox626.github.io/tags/camera/"/>
    
  </entry>
  
  <entry>
    <title>__has_include</title>
    <link href="https://blackox626.github.io/2022/09/06/has-include/"/>
    <id>https://blackox626.github.io/2022/09/06/has-include/</id>
    <published>2022-09-06T05:47:47.000Z</published>
    <updated>2022-09-06T06:36:58.265Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;VS&quot;&gt;&lt;a href=&quot;#VS&quot; class=&quot;headerlink&quot; title=&quot;VS&quot;&gt;&lt;/a&gt;VS&lt;/h3&gt;&lt;p&gt;在搞音视频的过程中，早期为了快速实现功能，会用到一些开源库，比如&lt;code&gt;FFMpeg、OpenCV、LibYUV&lt;/code&gt; 等，这些大名鼎鼎的开源库能够解决音视频领域的很多问题，编解码、边缘检测、RGB-YUV格式转换等等。&lt;/p&gt;
&lt;p&gt;这几个开源库还都是C/C++的，完美解决跨平台的问题，所以早期可以快速上线，但也会带来增加包大小的问题，这是最明显的，另外开源方案也并非没有BUG。对开源库做裁剪减少大小/提issue等待官方处理、自己处理BUG等这些成本相对也不小。&lt;/p&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox626.github.io/categories/media/"/>
    
    
      <category term="media" scheme="https://blackox626.github.io/tags/media/"/>
    
  </entry>
  
  <entry>
    <title>RGB2YUV</title>
    <link href="https://blackox626.github.io/2022/09/05/RGB2YUV/"/>
    <id>https://blackox626.github.io/2022/09/05/RGB2YUV/</id>
    <published>2022-09-05T11:21:17.000Z</published>
    <updated>2022-10-25T11:21:17.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;RGB2YUV&quot;&gt;&lt;a href=&quot;#RGB2YUV&quot; class=&quot;headerlink&quot; title=&quot;RGB2YUV&quot;&gt;&lt;/a&gt;RGB2YUV&lt;/h3&gt;&lt;p&gt;处理音视频，对&lt;strong&gt;YUV RGB&lt;/strong&gt;肯定不陌生，这里记录下经过OpenGL处理后的 &lt;strong&gt;RGB&lt;/strong&gt; 格式的&lt;strong&gt;pixelBuffer&lt;/strong&gt; 转成 &lt;strong&gt;YUV&lt;/strong&gt; 格式导出视频。&lt;/p&gt;
&lt;h4 id=&quot;DIY&quot;&gt;&lt;a href=&quot;#DIY&quot; class=&quot;headerlink&quot; title=&quot;DIY&quot;&gt;&lt;/a&gt;DIY&lt;/h4&gt;&lt;p&gt;自己处理矩阵的计算，YUV的存储格式，可以加深对YUV的理解， 类似的反过来处理，或者处理其他格式的YUV 422 444等，也是一样的。&lt;br&gt;所以还是有必要了解一下，DO IT YOURSELF.&lt;/p&gt;
&lt;p&gt;重点是注意内存对齐，YUV420采样存储方式就好了，其他没什么复杂的。&lt;/p&gt;
    
    </summary>
    
      <category term="media" scheme="https://blackox626.github.io/categories/media/"/>
    
    
      <category term="YUV" scheme="https://blackox626.github.io/tags/YUV/"/>
    
      <category term="media" scheme="https://blackox626.github.io/tags/media/"/>
    
  </entry>
  
  <entry>
    <title>flutter Display P3</title>
    <link href="https://blackox626.github.io/2022/08/31/flutter-Display-P3/"/>
    <id>https://blackox626.github.io/2022/08/31/flutter-Display-P3/</id>
    <published>2022-08-31T11:00:17.000Z</published>
    <updated>2022-09-13T02:35:07.815Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Display-P3&quot;&gt;&lt;a href=&quot;#Display-P3&quot; class=&quot;headerlink&quot; title=&quot;Display P3&quot;&gt;&lt;/a&gt;Display P3&lt;/h3&gt;&lt;p&gt;Display P3 是苹果手机相机使用的一种色域，查看图片信息可以看到， 然而在flutter中 渲染 Display P3格式的图片 bitmap颜色失真,不了解色域的参考下前面HDR相关的文章&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/20220831_190154_image.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="flutter" scheme="https://blackox626.github.io/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://blackox626.github.io/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>flutter-hdr</title>
    <link href="https://blackox626.github.io/2022/08/24/flutter-hdr/"/>
    <id>https://blackox626.github.io/2022/08/24/flutter-hdr/</id>
    <published>2022-08-24T10:54:50.000Z</published>
    <updated>2022-10-25T09:59:12.668Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;flutter&quot;&gt;&lt;a href=&quot;#flutter&quot; class=&quot;headerlink&quot; title=&quot;flutter&quot;&gt;&lt;/a&gt;flutter&lt;/h3&gt;&lt;p&gt;flutter 播放 HDR 视频，色彩跟亮度都有问题 ，github 也有反馈这个issue &lt;a href=&quot;https://github.com/flutter/flutter/issues/91241&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Video Player HDR Problem&lt;/strong&gt;&lt;/a&gt; 跟原生的对比可以很明显看到差距，官方看起来好像也不重视这个问题 😕&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2773578/135998217-329a735c-5db4-462b-966f-441d2ec154ce.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="flutter" scheme="https://blackox626.github.io/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://blackox626.github.io/tags/flutter/"/>
    
      <category term="HDR" scheme="https://blackox626.github.io/tags/HDR/"/>
    
  </entry>
  
  <entry>
    <title>HDR笔记</title>
    <link href="https://blackox626.github.io/2022/08/18/HDR%E7%AC%94%E8%AE%B0/"/>
    <id>https://blackox626.github.io/2022/08/18/HDR笔记/</id>
    <published>2022-08-18T09:43:46.000Z</published>
    <updated>2022-09-13T02:35:07.814Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Noun-explanation&quot;&gt;&lt;a href=&quot;#Noun-explanation&quot; class=&quot;headerlink&quot; title=&quot;Noun explanation&quot;&gt;&lt;/a&gt;Noun explanation&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;ITU&lt;/strong&gt;：国际电信联盟 &lt;strong&gt;&lt;code&gt;International Telecommunication Union&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;ITU-R&lt;/strong&gt;：国际电信联盟无线电通信部门 &lt;strong&gt;ITU Radiocommunication Sector&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CIE&lt;/strong&gt; :国际照明协会 （&lt;a href=&quot;https://zh.m.wikipedia.org/wiki/%E8%8B%B1%E6%96%87&quot; title=&quot;英文&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;英文&lt;/a&gt;：&lt;strong&gt;&lt;code&gt;International Commission on Illumination&lt;/code&gt;&lt;/strong&gt; ，&lt;a href=&quot;https://zh.m.wikipedia.org/wiki/%E6%B3%95%E6%96%87&quot; title=&quot;法文&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;法文&lt;/a&gt;：&lt;strong&gt;&lt;code&gt;Commission internationale de l&amp;#39;éclairage&lt;/code&gt;&lt;/strong&gt; ，采用法文&lt;a href=&quot;https://zh.m.wikipedia.org/wiki/%E7%B8%AE%E5%AF%AB&quot; title=&quot;缩写&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;缩写&lt;/a&gt;：&lt;strong&gt;CIE&lt;/strong&gt; ）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SMPTE&lt;/strong&gt;：电影电视工程师协会 &lt;strong&gt;Society of Motion Picture and Television Engineers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hue&lt;/strong&gt;：色调 色彩 色相&lt;br&gt;&lt;strong&gt;Chroma&lt;/strong&gt;：色调饱和度 浓度&lt;br&gt;&lt;strong&gt;Luminance&lt;/strong&gt;：亮度 明度&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;HDR-Concept&quot;&gt;&lt;a href=&quot;#HDR-Concept&quot; class=&quot;headerlink&quot; title=&quot;HDR Concept&quot;&gt;&lt;/a&gt;HDR Concept&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;HDR&lt;/strong&gt;:&lt;code&gt;High Dynamic Range&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;字面上是动态范围，一般指亮度上可以表达更大的亮度范围，呈现更大的亮度对比度。但是实际实际上HDR的技术和标准涉及色彩相关的一组属性的改善，可以带来更多的颜色、更大的亮度对比度、更高精度的量化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;OETF/EOTF&lt;/strong&gt;: Optical-Electro/Electro-Optical Transfer Function 光电/电光转换函数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;人对亮度的感知是非线性的，对暗部细节敏感，对亮部细节不敏感，利用这个特点设计了非线性的光电转换和电光转换的函数。这样的处理不仅可以节省带宽，也可以基本满足用户体验需求。&lt;br&gt;光电转换的时候做了特殊的非线性编码，为暗部细节分配更多的码率，亮部细节进行了压缩或者截断减少码率的分配。电光转换进行显示还原的时候，通过应用一个逆的非线性变化，还原出线性光。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="HDR" scheme="https://blackox626.github.io/categories/HDR/"/>
    
    
      <category term="YUV" scheme="https://blackox626.github.io/tags/YUV/"/>
    
      <category term="HDR" scheme="https://blackox626.github.io/tags/HDR/"/>
    
      <category term="OPENGL" scheme="https://blackox626.github.io/tags/OPENGL/"/>
    
  </entry>
  
  <entry>
    <title>coreimage with metal 笔记</title>
    <link href="https://blackox626.github.io/2022/08/08/coreimage-with-metal-%E7%AC%94%E8%AE%B0/"/>
    <id>https://blackox626.github.io/2022/08/08/coreimage-with-metal-笔记/</id>
    <published>2022-08-08T08:07:28.000Z</published>
    <updated>2022-09-13T02:35:07.814Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;xcode&quot;&gt;&lt;a href=&quot;#xcode&quot; class=&quot;headerlink&quot; title=&quot;xcode&quot;&gt;&lt;/a&gt;xcode&lt;/h3&gt;&lt;p&gt;近期有自定义CoreImage的CIFilter的需求，前期通过CIKL 定义 CIKernel完成了任务，后面了解到CoreImage新特性支持metal的方式直接自定义 CIKernel，提高效率。&lt;/p&gt;
&lt;p&gt;CIKL的方式，存在两个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编写 kernel 的时候，没有报错提示，哪怕是参数名错误都无法检查处理。效率极低。&lt;/li&gt;
&lt;li&gt;翻译转换，编译，都是发生到运行时，导致第一次使用滤镜的时候，耗时较久。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Metal: 在build阶段 就可以编译 链接 .metal文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/8322102d-d9c7-4066-b1f5-c0b26a36d186.png&quot; alt=&quot;Compiling &amp;amp; Linking&quot;&gt;&lt;/p&gt;
&lt;p&gt;参考苹果的官方文档 &lt;code&gt;Metal Shading Language for CoreImage Kernels&lt;/code&gt;  ,在&lt;code&gt;xcode integration&lt;/code&gt; 部分提到在&lt;code&gt;build setting&lt;/code&gt; 设置 &lt;code&gt;Other Metal Compiler Flags&lt;/code&gt;, 文档已经很老了（2018年的），新版的xcode已经没有这个选项了，如果不做处理，会有报错 &lt;code&gt;&amp;quot;/air-lld:1:1: symbol(s) not found for target &amp;#39;air64-apple-ios12.0.0&amp;#39;&amp;quot; and &amp;quot;air-lld command failed with exit code 1 (use -v to see invocation)&amp;quot;&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="metal" scheme="https://blackox626.github.io/categories/metal/"/>
    
    
      <category term="metal" scheme="https://blackox626.github.io/tags/metal/"/>
    
      <category term="coreimage" scheme="https://blackox626.github.io/tags/coreimage/"/>
    
  </entry>
  
  <entry>
    <title>flutter 1.17共享engine</title>
    <link href="https://blackox626.github.io/2020/06/03/flutter-1-17%E5%85%B1%E4%BA%ABengine/"/>
    <id>https://blackox626.github.io/2020/06/03/flutter-1-17共享engine/</id>
    <published>2020-06-02T16:02:04.000Z</published>
    <updated>2022-08-23T12:34:54.500Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;flutter 升级到 1.17之后，app ios 线上遇到一个crash ,通过官方的 符号表文件 flutter.dsym 还原出堆栈如下&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; auto fml::internal::CopyableLambda&amp;lt;flutter::Shell::OnPlatformViewCreated(std::__1::unique_ptr&amp;lt;flutter::Surface, std::__1::default_delete&amp;lt;flutter::Surface&amp;gt; &amp;gt;)::$_8&amp;gt;::operator()&amp;lt;&amp;gt;() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; (in Flutter) (make_copyable.h:&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; auto fml::internal::CopyableLambda&amp;lt;flutter::Shell::OnPlatformViewCreated(std::__1::unique_ptr&amp;lt;flutter::Surface, std::__1::default_delete&amp;lt;flutter::Surface&amp;gt; &amp;gt;)::$_8&amp;gt;::operator()&amp;lt;&amp;gt;() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; (in Flutter) (make_copyable.h:&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; fml::MessageLoopImpl::FlushTasks(fml::FlushType) (in Flutter) (message_loop_impl.cc:&lt;span class=&quot;number&quot;&gt;129&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; fml::MessageLoopDarwin::OnTimerFire(__CFRunLoopTimer*, fml::MessageLoopDarwin*) (in Flutter) (message_loop_darwin.mm:&lt;span class=&quot;number&quot;&gt;76&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; fml::MessageLoopDarwin::Run() (in Flutter) (message_loop_darwin.mm:&lt;span class=&quot;number&quot;&gt;47&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;* std::__1::__thread_proxy&amp;lt;std::__1::tuple&amp;lt;std::__1::unique_ptr&amp;lt;std::__1::__thread_struct, std::__1::default_delete&amp;lt;std::__1::__thread_struct&amp;gt; &amp;gt;, fml::Thread::Thread(std::__1::basic_string&amp;lt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;, std::__1::char_traits&amp;lt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;&amp;gt;, std::__1::allocator&amp;lt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;&amp;gt; &amp;gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&amp;amp;)::$_0&amp;gt; &amp;gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*) (in Flutter) (thread:&lt;span class=&quot;number&quot;&gt;352&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里还只能看到crash在engine的c++代码中，具体原因未知&lt;/p&gt;
    
    </summary>
    
      <category term="flutter" scheme="https://blackox626.github.io/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://blackox626.github.io/tags/flutter/"/>
    
      <category term="dart" scheme="https://blackox626.github.io/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>flutter 1.17升级</title>
    <link href="https://blackox626.github.io/2020/05/21/flutter-1-17%E5%8D%87%E7%BA%A7/"/>
    <id>https://blackox626.github.io/2020/05/21/flutter-1-17升级/</id>
    <published>2020-05-21T04:04:56.000Z</published>
    <updated>2020-05-21T11:48:01.372Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;升级&quot;&gt;&lt;a href=&quot;#升级&quot; class=&quot;headerlink&quot; title=&quot;升级&quot;&gt;&lt;/a&gt;升级&lt;/h2&gt;&lt;p&gt;最近官方发布了flutter 稳定版本1.17.0 ，记录下升级1.17 ios上碰到的的问题&lt;/p&gt;
&lt;h2 id=&quot;App产物&quot;&gt;&lt;a
        
      
    
    </summary>
    
      <category term="flutter" scheme="https://blackox626.github.io/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://blackox626.github.io/tags/flutter/"/>
    
      <category term="dart" scheme="https://blackox626.github.io/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>flutter tool debug</title>
    <link href="https://blackox626.github.io/2020/03/13/flutter-tool-debug/"/>
    <id>https://blackox626.github.io/2020/03/13/flutter-tool-debug/</id>
    <published>2020-03-13T05:02:04.000Z</published>
    <updated>2020-03-13T09:15:00.317Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Flutter&quot;&gt;&lt;a href=&quot;#Flutter&quot; class=&quot;headerlink&quot; title=&quot;Flutter&quot;&gt;&lt;/a&gt;Flutter&lt;/h2&gt;&lt;p&gt;flutter 开发过程中，少不了会运行一些 flutter 命令 ，比如 flutter build xxx 、 flutter run  等等&lt;br&gt;看下 bin/flutter 脚本，背后都是 flutter_tool 在执行各种操作。&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FLUTTER_TOOLS_DIR=&quot;$FLUTTER_ROOT/packages/flutter_tools&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SNAPSHOT_PATH=&quot;$FLUTTER_ROOT/bin/cache/flutter_tools.snapshot&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;STAMP_PATH=&quot;$FLUTTER_ROOT/bin/cache/flutter_tools.stamp&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SCRIPT_PATH=&quot;$FLUTTER_TOOLS_DIR/bin/flutter_tools.dart&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DART_SDK_PATH=&quot;$FLUTTER_ROOT/bin/cache/dart-sdk&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&quot;$DART&quot; --packages=&quot;$FLUTTER_TOOLS_DIR/.packages&quot; $FLUTTER_TOOL_ARGS &quot;$SNAPSHOT_PATH&quot; &quot;$@&quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="flutter" scheme="https://blackox626.github.io/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://blackox626.github.io/tags/flutter/"/>
    
      <category term="dart" scheme="https://blackox626.github.io/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>flutter共享engine</title>
    <link href="https://blackox626.github.io/2020/03/10/flutter%E5%85%B1%E4%BA%ABengine/"/>
    <id>https://blackox626.github.io/2020/03/10/flutter共享engine/</id>
    <published>2020-03-10T15:00:08.000Z</published>
    <updated>2020-03-13T09:11:36.450Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;flutter-共享引擎-问题记录&quot;&gt;&lt;a href=&quot;#flutter-共享引擎-问题记录&quot; class=&quot;headerlink&quot; title=&quot;flutter 共享引擎 问题记录&quot;&gt;&lt;/a&gt;flutter 共享引擎 问题记录&lt;/h2&gt;&lt;p&gt;共享引擎，就是只有一个 &lt;em&gt;flutter engine&lt;/em&gt;，每个页面一个 flutterviewcontroller。&lt;br&gt;flutter页面 切换，引擎会相应的 &lt;em&gt;detach&lt;/em&gt; &lt;em&gt;atach&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;最近 升级 flutter 到 v1.12.13 版本后，贡献引擎遇到的几个问题 记录下 &lt;/p&gt;
    
    </summary>
    
      <category term="flutter" scheme="https://blackox626.github.io/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://blackox626.github.io/tags/flutter/"/>
    
      <category term="dart" scheme="https://blackox626.github.io/tags/dart/"/>
    
      <category term="ios" scheme="https://blackox626.github.io/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>flutter engine 定制</title>
    <link href="https://blackox626.github.io/2020/03/05/flutter-engine-%E5%AE%9A%E5%88%B6/"/>
    <id>https://blackox626.github.io/2020/03/05/flutter-engine-定制/</id>
    <published>2020-03-05T09:53:06.000Z</published>
    <updated>2020-03-10T15:27:28.535Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;…&quot;&gt;&lt;a href=&quot;#…&quot; class=&quot;headerlink&quot; title=&quot;…&quot;&gt;&lt;/a&gt;…&lt;/h2&gt;&lt;p&gt;使用Flutter开发的时候最直接接触的并不是 &lt;em&gt;Flutter&lt;/em&gt; &lt;em&gt;Engine&lt;/em&gt; 而是
        
      
    
    </summary>
    
      <category term="flutter" scheme="https://blackox626.github.io/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://blackox626.github.io/tags/flutter/"/>
    
      <category term="dart" scheme="https://blackox626.github.io/tags/dart/"/>
    
  </entry>
  
  <entry>
    <title>flutter eventChannel crash on ios</title>
    <link href="https://blackox626.github.io/2019/10/21/flutter-eventChannel-crash-on-ios/"/>
    <id>https://blackox626.github.io/2019/10/21/flutter-eventChannel-crash-on-ios/</id>
    <published>2019-10-21T06:36:21.000Z</published>
    <updated>2019-10-22T03:25:15.605Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;flutter-issue&quot;&gt;&lt;a href=&quot;#flutter-issue&quot; class=&quot;headerlink&quot; title=&quot;flutter issue&quot;&gt;&lt;/a&gt;flutter issue&lt;/h2&gt;&lt;p&gt;&lt;a
        
      
    
    </summary>
    
      <category term="flutter" scheme="https://blackox626.github.io/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://blackox626.github.io/tags/flutter/"/>
    
      <category term="dart" scheme="https://blackox626.github.io/tags/dart/"/>
    
      <category term="ios" scheme="https://blackox626.github.io/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>flutter ios 13 dark mode</title>
    <link href="https://blackox626.github.io/2019/10/14/flutter-ios-13-dark-mode/"/>
    <id>https://blackox626.github.io/2019/10/14/flutter-ios-13-dark-mode/</id>
    <published>2019-10-14T03:46:08.000Z</published>
    <updated>2019-10-16T03:25:07.364Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;ios 13 开启 dark model,flutter页面status bar文字一直是白色&lt;/p&gt;
&lt;p&gt;&lt;a
        
      
    
    </summary>
    
      <category term="flutter" scheme="https://blackox626.github.io/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://blackox626.github.io/tags/flutter/"/>
    
      <category term="dart" scheme="https://blackox626.github.io/tags/dart/"/>
    
      <category term="ios" scheme="https://blackox626.github.io/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>mustache之dart</title>
    <link href="https://blackox626.github.io/2019/05/31/mustache%E4%B9%8Bdart/"/>
    <id>https://blackox626.github.io/2019/05/31/mustache之dart/</id>
    <published>2019-05-31T03:23:40.000Z</published>
    <updated>2019-05-31T05:31:41.029Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Mustache 是一个 logic-less （轻逻辑）模板解析引擎，可以应用在 js、PHP、Python、Perl 等多种编程语言中。这里主要是看dart中的应用。&lt;/p&gt;
&lt;p&gt;模板语法很简单  &lt;a href=&quot;https://pub.dev/packages/mustache#-readme-tab-&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;看这里&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#123;keyName&amp;#125;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#123;#keyName&amp;#125;&amp;#125; &amp;#123;&amp;#123;/keyName&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#123;^keyName&amp;#125;&amp;#125; &amp;#123;&amp;#123;/keyName&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#123;.&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#123;&amp;gt;partials&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#123;&amp;#123;keyName&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#123;!comments&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="flutter" scheme="https://blackox626.github.io/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://blackox626.github.io/tags/flutter/"/>
    
      <category term="dart" scheme="https://blackox626.github.io/tags/dart/"/>
    
      <category term="mustache" scheme="https://blackox626.github.io/tags/mustache/"/>
    
  </entry>
  
  <entry>
    <title>jvm调优</title>
    <link href="https://blackox626.github.io/2019/05/23/jvm%E8%B0%83%E4%BC%98/"/>
    <id>https://blackox626.github.io/2019/05/23/jvm调优/</id>
    <published>2019-05-23T08:57:30.000Z</published>
    <updated>2020-03-10T15:30:18.288Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;jps&quot;&gt;&lt;a href=&quot;#jps&quot; class=&quot;headerlink&quot; title=&quot;jps&quot;&gt;&lt;/a&gt;jps&lt;/h3&gt;&lt;p&gt;输出JVM中运行的进程状态信息&lt;/p&gt;
&lt;figure class=&quot;highlight
        
      
    
    </summary>
    
      <category term="java" scheme="https://blackox626.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://blackox626.github.io/tags/java/"/>
    
      <category term="jvm" scheme="https://blackox626.github.io/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>vmstatu</title>
    <link href="https://blackox626.github.io/2019/05/22/vmstatus/"/>
    <id>https://blackox626.github.io/2019/05/22/vmstatus/</id>
    <published>2019-05-22T03:00:39.000Z</published>
    <updated>2019-05-27T02:19:46.397Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;vmstatu&quot;&gt;&lt;a href=&quot;#vmstatu&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="java" scheme="https://blackox626.github.io/tags/java/"/>
    
      <category term="linux" scheme="https://blackox626.github.io/tags/linux/"/>
    
  </entry>
  
</feed>
